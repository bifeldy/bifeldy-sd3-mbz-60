@inherits LayoutComponentBase

@implements IDisposable

@using bifeldy_sd3_lib_60.Services

@inject IJSRuntime _js
@inject NavigationManager _nm

@inject ILogger<FoundLayout> _logger
@inject IApplicationService _app


<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText>@_pageTitle</MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Href="https://mudblazor.com/" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Href="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="1">
        <MudDrawerHeader Class="mud-theme-primary" Style="align-items: center;">
            <MudText Typo="Typo.h6">bifeldy_sd3_mbz_60</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="px-0">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>


<script>
    function getDocumentTitle() {
        return document.title;
    }
    function setDocumentTitle(headTitle) {
        return document.title = headTitle;
    }
</script>


@code {

    string _pageTitle = string.Empty;

    bool _drawerOpen = true;

    protected override void OnInitialized() {
        _nm.LocationChanged += OnLocationChanged;
    }

    public void Dispose() {
        _nm.LocationChanged -= OnLocationChanged;
    }

    private async void OnLocationChanged(object sender, LocationChangedEventArgs args) {
        if (args.IsNavigationIntercepted) {
            // Navigated From HTML (eg. href="", document.window.location="")
        }
        _pageTitle = await _js.InvokeAsync<string>("getDocumentTitle");
        await _js.InvokeVoidAsync("setDocumentTitle", $"{_pageTitle} | {_app.AppName}");
        base.StateHasChanged();
    }

    void DrawerToggle() {
        _drawerOpen = !_drawerOpen;
    }

}