@page "/kafka-live-logs"

@implements IDisposable

@using bifeldy_sd3_lib_60.Models
@using bifeldy_sd3_lib_60.Services

@inject IPubSubService _pubSub


<PageTitle>Kafka logs</PageTitle>


<MudContainer MaxWidth="MaxWidth.Large" Class="px-0" Style="background: purple; height: 64px;">
    asdasdasd
</MudContainer>

<MudContainer MaxWidth="MaxWidth.Large" Class="py-5 px-5">

    <MudText Typo="Typo.h3" GutterBottom="true">
        Kafka logs
    </MudText>

    @if (lskf == null) {
        <MudText Class="my-8">
            Topic "@KAFKA_NAME" not found.
        </MudText>
    }
    else {
        <MudProgressLinear Color="Color.Secondary" Indeterminate="true" Class="my-8" />
        @foreach (var km in lskf) {
            <MudText>
                [@km.Timestamp.UtcDateTime] @km.Key :: @km.Value.ToString()
            </MudText>
        }
    }

</MudContainer>


@code {

    private IDisposable kafkaSubs = null;

    private List<KafkaMessage<string, dynamic>> lskf = null;

    // Ngikut sama yang ada di Program.cs
    // Bifeldy.AddKafkaConsumerBackground("172.31.2.122:9092", "pbro_web_test");
    private string KAFKA_NAME = $"KAFKA_CONSUMER_{"pbro_web_test".ToUpper()}";

    protected override void OnInitialized() {
        if (kafkaSubs == null && _pubSub.IsExist(KAFKA_NAME)) {
            if (lskf == null) {
                lskf = new List<KafkaMessage<string, dynamic>>();
            }
            kafkaSubs = _pubSub
                .GetGlobalAppBehaviorSubject<KafkaMessage<string, dynamic>>(KAFKA_NAME)
                .Subscribe(async data => {
                    if (data != null) {
                        lskf.Prepend(data);
                        await base.InvokeAsync(StateHasChanged);
                    }
                });
        }
    }

    public void Dispose() {
        kafkaSubs?.Dispose();
    }

}
